[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=25]
code = "shader_type canvas_item;


uniform vec4 white_color: hint_color = vec4(1.0);
uniform vec4 body_color: hint_color = vec4(1.0);
uniform vec4 heart_color: hint_color = vec4(1.0);
uniform float tolerance: hint_range(0.0,1.0) = 0.5;

uniform vec4 white_mask_color: hint_color = vec4(1.0,0.0,1.0,1.0);
uniform vec4 body_mask_color: hint_color = vec4(1.0,0.0,1.0,1.0);
uniform vec4 heart_mask_color: hint_color = vec4(1.0,0.0,1.0,1.0);

void fragment(){
	vec4 color_a = texture(TEXTURE,UV);
	vec3 color = color_a.rgb;
	float a = color_a.a;
	
	float white_len = length(white_mask_color.rgb);
	float body_len = length(body_mask_color.rgb);
	float heart_len = length(heart_mask_color.rgb);
	
	float b_len = length(color);
	
	vec3 white_mask_norm = white_mask_color.rgb / white_len * b_len;
	vec3 white_color_norm = white_color.rgb / white_len * b_len;
	vec3 body_mask_norm = body_mask_color.rgb / body_len * b_len;
	vec3 body_color_norm = body_color.rgb / body_len * b_len;
	vec3 heart_mask_norm = heart_mask_color.rgb / heart_len * b_len;
	vec3 heart_color_norm = heart_color.rgb / heart_len * b_len;
	
	float white_dist = distance(color, white_mask_norm);
	float body_dist = distance(color, body_mask_norm);
	float heart_dist = distance(color, heart_mask_norm);
	
	color = mix(white_color_norm, color, step(tolerance, white_dist));
	color = mix(body_color_norm, color, step(tolerance, body_dist));
	color = mix(heart_color_norm, color, step(tolerance, heart_dist));
	COLOR = vec4(color, a);
}"

[resource]
shader = SubResource( 25 )
shader_param/white_color = Color( 0.94902, 0.866667, 0.960784, 1 )
shader_param/body_color = Color( 0.854902, 0.862745, 0.168627, 1 )
shader_param/heart_color = Color( 0.843137, 0.223529, 0.223529, 1 )
shader_param/tolerance = 0.2
shader_param/white_mask_color = Color( 1, 1, 1, 1 )
shader_param/body_mask_color = Color( 0.847059, 0.298039, 0.298039, 1 )
shader_param/heart_mask_color = Color( 1, 0.615686, 0.898039, 1 )
